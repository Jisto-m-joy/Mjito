<%- include("../../views/admin/partials/header") %>

<head>
    <style>
        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }

        .thumbnail {
            margin-right: 10px;
        }

        .input-upload {
            position: relative;
        }

        .error-message {
            color: red;
            display: none;
        }
    </style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>

<body>
    <section class="content-main">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="content-header">
                        <h2 class="text-center mb-4" style="color:#fefffe; font-family: 'Poppins', sans-serif; font-size: 2.5rem; font-weight: 700; text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3); letter-spacing: 2px;">
                            EDIT PRODUCTS
                        </h2>
                    </div>
                </div>

                <div class="col-lg-8 mx-auto">
                    <div class="card mb-4">
                        <div class="card-body">
                            <% if (product) { %>
                            <form method="post" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data" onsubmit="return validateForm()">
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">Product Name</label>
                                    <input type="text" placeholder="Type here" name="productName" value="<%= product.name %>" class="form-control" id="product_name">
                                    <div id="productName-error" class="error-message"></div>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Description</label>
                                    <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control" rows="4"><%= product.description %></textarea>
                                    <div id="description-error" class="error-message"></div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-lg-4">
                                        <label class="form-label">Regular Price</label>
                                        <input placeholder="₹" name="regularPrice" type="text" class="form-control" value="<%= product.regularPrice %>">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                    <div class="col-lg-4">
                                        <label class="form-label">Sale Price</label>
                                        <input placeholder="₹" name="salePrice" type="text" class="form-control" value="<%=product.salesPrice%>">
                                        <div id="salePrice-error" class="error-message"></div>
                                    </div>
                                    <div class="col-lg-4">
                                        <label class="form-label">Quantity</label>
                                        <input placeholder="kg" name="quantity" type="text" class="form-control" value="<%= product.quantity %>">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Color</label>
                                    <input name="color" type="text" value="<%=product.color%>" class="form-control border">
                                    <div id="color-error" class="error-message"></div>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Category</label>
                                    <select class="form-select" name="category">
                                        <% for(let i=0; i < cat.length; i++) { %>
                                        <option value="<%= cat[i]._id %>"><%= cat[i].name %></option>
                                        <% } %>
                                    </select>
                                    <div id="category-error" class="error-message"></div>
                                </div>
                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h4>Edit Product Images</h4>
                                    </div>
                                    <div class="row">
                                        <% if (product.images && product.images.length > 0) { %>
                                        <% for (let i = 0; i < product.images.length; i++) { %>
                                        <div class="col-md-3 border p-2 text-center">
                                            <img src="/<%= product.images[i] %>" alt="Product Image" class="img-thumbnail" style="width: 100%; height: 150px; object-fit: cover;">
                                            <button type="button" style="background-color: rgb(150, 35, 35);" class="btn btn-danger btn-sm mt-2" onclick="deleteImage('<%= product.images[i] %>', '<%= product._id %>')">Delete</button>
                                        </div>
                                        <% } %>
                                        <% } else { %>
                                        <p class="text-center">No images found</p>
                                        <% } %>
                                    </div>
                                    <div class="card-header">
                                        <h4>Choose images</h4>
                                    </div>
                                    <div class="border row mb-4">
                                        <div id="addedImagesContainer" class="thumbnails-container"></div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-6 mb-4">
                                            <div class="card-body align-items-center">
                                                <img src="" alt="" id="imgView1">
                                                <input class="form-control" type="file" name="images" id="input1" value="" accept="image/webp, image/jpeg, image/jpg" onchange="viewImage1(event), viewImage(event, 1)">
                                                <div id="images-error" class="error-message"></div>
                                            </div>
                                            <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                <img src="" id="croppedImg1" alt="">
                                                <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 mb-4">
                                            <div class="card-body align-items-center">
                                                <img src="" alt="" id="imgView2">
                                                <input class="form-control" type="file" name="images" id="input2" accept="image/webp, image/jpeg, image/jpg" onchange="viewImage2(event),viewImage(event, 2)">
                                            </div>
                                            <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                <img src="" id="croppedImg2" alt="">
                                                <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-6 mb-4">
                                            <div class="card-body align-items-center">
                                                <img src="" alt="" id="imgView3">
                                                <input class="form-control" type="file" name="images" id="input3" accept="image/webp, image/jpeg, image/jpg" onchange="viewImage3(event),viewImage(event, 3)">
                                            </div>
                                            <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                <img src="" id="croppedImg3" alt="">
                                                <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 mb-4">
                                            <div class="card-body align-items-center">
                                                <img src="" alt="" id="imgView4">
                                                <input class="form-control" type="file" name="images" id="input4" accept="image/webp, image/jpeg, image/jpg" onchange="viewImage4(event),viewImage(event, 4)">
                                            </div>
                                            <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                <img src="" id="croppedImg4" alt="">
                                                <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <button type="button" class="btn btn-md btn-danger" onclick="validateAndSubmit()">Save Changes</button>
                                    <a href="/admin/products" class="btn btn-secondary">Cancel</a>
                                </div>
                            </form>
                            <% } else { %>
                            <p>Product not found.</p>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <%- include("../../views/admin/partials/footer") %>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script>
        function validateAndSubmit() {
            if (validateForm()) {
                document.forms[0].submit();
            }
        }

        function viewImage1(event) {
            document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
        }

        function viewImage2(event) {
            document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
        }

        function viewImage3(event) {
            document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
        }

        function viewImage4(event) {
            document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
        }

        function viewImage(event, index) {
            let input = event.target;
            let reader = new FileReader();
            reader.onload = function () {
                let dataURL = reader.result;
                let image = document.getElementById("imgView" + index)
                image.src = dataURL;
                let cropper = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 2,
                    guides: true,
                    background: false,
                    autoCropArea: 1,
                    zoomable: true
                })
                let cropperContanier = document.querySelector("#croppedImg" + index).parentNode;
                cropperContanier.style.display = 'block';

                let saveButton = document.querySelector('#saveButton' + index)
                saveButton.addEventListener('click', async function () {
                    let croppedCanvas = cropper.getCroppedCanvas();
                    let croppedImage = document.getElementById('croppedImg' + index);
                    croppedImage.src = croppedCanvas.toDataURL('image/webp', 1.0);
                    let timestamp = new Date().getTime();
                    let fileName = `cropped-img-${timestamp}-${index}.webp`;

                    await croppedCanvas.toBlob(blob => {
                        let input = document.getElementById('input' + index)
                        let imgFile = new File([blob], fileName, blob)
                        const fileList = new DataTransfer();
                        fileList.items.add(imgFile);
                        input.files = fileList.files;
                    })

                    cropperContanier.style.display = 'none';
                    cropper.destroy();
                })
            }
            reader.readAsDataURL(input.files[0]);
        }

        const selectedImages = [];
        document.getElementById('input1').addEventListener('change', handleFileSelect);

        function handleFileSelect(event) {
            const addedImagesContainer = document.getElementById('addedImagesContainer')
            addedImagesContainer.innerHTML = '';
            const files = event.target.files;
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                selectedImages.push(file)
                const thumbnail = document.createElement('div');
                thumbnail.classList.add('thumbnail')

                const img = document.createElement('img');
                img.src = URL.createObjectURL(file);
                img.alt = "thumbnail";
                img.style.width = "50px";
                img.style.height = "auto";
                const removeIcon = document.createElement('span');
                removeIcon.classList.add('remove-icon');

                removeIcon.innerHTML = "&times;";
                removeIcon.addEventListener("click", function () {
                    const index = selectedImages.indexOf(file);
                    if (index !== -1) {
                        selectedImages.splice(index, 1);
                    }
                    thumbnail.remove();
                })
                thumbnail.appendChild(img);
                thumbnail.appendChild(removeIcon);
                addedImagesContainer.appendChild(thumbnail);
            }
        }

        function validateForm() {
            clearErrorMessages();
            const name = document.getElementsByName('productName')[0].value;
            const description = document.getElementById('descriptionid').value;
            const price = document.getElementsByName('regularPrice')[0].value;
            const tag = document.getElementsByName('tag')[0].value;
            const category = document.getElementsByName('category')[0].value;
            const images = document.getElementById('input1')
            const quantity = document.getElementsByName('quantity')
            let isValid = true

            if (name.trim() === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            } else if (!/^[a-zA-Z\s]+$/.test(name.trim())) {
                displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters.');
                isValid = false;
            }

            if (description.trim() === "") {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            } else if (!/^[a-zA-Z\s]+$/.test(description.trim())) {
                displayErrorMessage('description-error', 'Product description should contain only alphabetic characters.');
                isValid = false;
            }

            if (parseInt(quantity) < 0) {
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) < 0 || parseFloat(salePrice) <= parseFloat(price)) {
                displayErrorMessage('salePrice-error', 'Please enter a valid non-negative and sale price lower than the original price.');
                isValid = false;
            }

            if (tag.trim() === "") {
                displayErrorMessage('tag-error', 'Please enter product Tags');
                isValid = false;
            } else if (!/^[a-zA-Z\s]+$/.test(tag.trim())) {
                displayErrorMessage('tag-error', 'Product Tags should contain only alphabetic characters.');
                isValid = false;
            }

            if (images.files.length === 0) {
                displayErrorMessage("images-error", 'Please select an image.');
                isValid = false;
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }

        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
            });
            const errorMessage = document.getElementById('errorMessage');
        }

        function deleteImage(imageId, productId) {
    console.log('Delete function triggered');
    console.log('Image ID:', imageId);
    console.log('Product ID:', productId);

    $.ajax({
        url: "/admin/deleteImage", // Ensure this matches your route
        method: "POST",
        data: {
            imageNameToServer: imageId.startsWith('/') ? imageId : '/' + imageId, // Ensure leading '/' for the image path
            productIdToServer: productId
        },
        success: (response) => {
            if (response.success) {
                window.location.reload();
            } else {
                console.log('Error:', response.error);
            }
        },
        error: (xhr, status, error) => {
            console.log('AJAX Error:', error);  // Debug error if any
        }
    });
}
    </script>
</body>

</html>