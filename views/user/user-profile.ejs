<%- include("../../views/user/partials/header") %>

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <!--=============== FLATICON ===============-->
  <link
    rel="stylesheet"
    href="https://cdn-uicons.flaticon.com/2.0.0/uicons-regular-straight/css/uicons-regular-straight.css"
  />

  <!--=============== SWEETALERT CSS LINK ===============-->
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"
  />

  <!--=============== CSS ===============-->
  <link rel="stylesheet" href="/assets/css/styles.css" />

  <title>User Profile</title>
  <style>
    .user-details {
      padding: 20px;
    }

    .detail-row {
      display: flex;
      margin-bottom: 20px;
      align-items: center;
    }

    .detail-row label {
      width: 100px;
      font-weight: var(--weight-600);
    }

    .detail-content {
      flex: 1;
      display: flex;
      gap: 10px;
      align-items: center;
    }

    .detail-content input {
      flex: 1;
      padding: 8px;
      border: 1px solid var(--border-color);
      border-radius: 4px;
    }

    .change-btn {
      background-color: var(--first-color);
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 4px;
      cursor: pointer;
    }

    .address-section {
      padding: 20px;
      border-top: 1px solid var(--border-color);
    }

    .add-address-btn {
      background-color: var(--first-color);
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 4px;
      margin-bottom: 20px;
      cursor: pointer;
    }

    .address-card {
      border: 1px solid var(--border-color);
      padding: 15px;
      margin-bottom: 15px;
      border-radius: 4px;
    }

    .address-card p {
      margin: 5px 0;
    }

    .address-actions {
      margin-top: 10px;
      display: flex;
      gap: 10px;
    }

    .edit-btn,
    .delete-btn {
      padding: 5px 10px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .edit-btn {
      background-color: var(--first-color);
      color: white;
    }

    .delete-btn {
      background-color: #dc3545;
      color: white;
    }
    /* Modal styles */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 1000;
    }

    .modal-content {
      position: relative;
      background-color: white;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      padding: 20px;
      width: 80%;
      max-width: 500px;
      border-radius: 8px;
    }

    .close-modal {
      position: absolute;
      right: 20px;
      top: 10px;
      font-size: 24px;
      cursor: pointer;
    }

    .password-field {
      position: relative;
      flex: 1;
      display: flex;
    }

    .toggle-password {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
      background: none;
      border: none;
      color: var(--text-color);
    }

    /* Address form styles */
    #addAddressForm .detail-row {
      margin-bottom: 15px;
    }

    #addAddressForm select {
      flex: 1;
      padding: 8px;
      border: 1px solid var(--border-color);
      border-radius: 4px;
      background-color: white;
      color: var(--text-color);
      width: 100%;
    }

    #addAddressForm select:focus {
      outline: none;
      border-color: var(--first-color);
    }

    #addAddressForm .change-btn {
      margin-top: 10px;
      width: 100%;
    }
  </style>
</head>
<body>
  <main class="main">
    <section class="accounts section--lg">
      <div class="accounts__container container grid">
        <!-- Left Side Navigation -->
        <div class="account__tabs">
          <p class="account__tab"><i class="fi fi-rs-home"></i> My Info</p>
          <p class="account__tab"><i class="fi fi-rs-heart"></i> Wishlist</p>
          <p class="account__tab">
            <i class="fi fi-rs-shopping-bag"></i> My Orders
          </p>
          <p class="account__tab"><i class="fi fi-rs-sign-out"></i> Sign Out</p>
        </div>

        <!--  Modal for editing Name -->
        <div id="editNameModal" class="modal">
          <div class="modal-content">
            <span class="close-modal">&times;</span>
            <h3>Edit Name</h3>
            <form id="editNameForm" class="user-details">
              <div class="detail-row">
                <label>Name:</label>
                <div class="detail-content">
                  <input type="text" id="editNameField" name="name"  />
                </div>
              </div>
              <button type="submit" class="change-btn">Save Changes</button>
            </form>
          </div>
        </div>

<!--  Modal for editing Password -->
<div id="editPasswordModal" class="modal">
  <div class="modal-content">
    <span class="close-modal">&times;</span>
    <h3>Edit Password</h3>
    <form id="editPasswordForm" class="user-details">
      <div class="detail-row">
        <label>New Password:</label>
        <div class="detail-content">
          <input type="password" id="editPasswordField" name="newPass1" required />
        </div>
      </div>
      <div class="detail-row">
        <label>Confirm Password:</label>
        <div class="detail-content">
          <input type="password" id="confirmEditPasswordField" name="newPass2" required />
        </div>
      </div>
      <button type="submit" class="change-btn">Save Changes</button>
    </form>
  </div>
</div>

        <!--  Address Modal -->
        <div id="addAddressModal" class="modal">
          <div class="modal-content">
            <span class="close-modal">&times;</span>
            <h3>Add New Address</h3>
            <form id="addAddressForm" class="user-details">
              <div class="detail-row">
                <label>Full Name:</label>
                <div class="detail-content">
                  <input type="text" id="fullName" name="fullName" required />
                </div>
              </div>
              <div class="detail-row">
                <label>Phone:</label>
                <div class="detail-content">
                  <input type="tel" id="phone" name="phone" required />
                </div>
              </div>
              <div class="detail-row">
                <label>Alt Phone:</label>
                <div class="detail-content">
                  <input type="tel" id="altPhone" name="altPhone" />
                </div>
              </div>
              <div class="detail-row">
                <label>Landmark:</label>
                <div class="detail-content">
                  <input type="text" id="landmark" name="landmark" required />
                </div>
              </div>
              <div class="detail-row">
                <label>Address:</label>
                <div class="detail-content">
                  <input type="text" id="address" name="address" required />
                </div>
              </div>
              <div class="detail-row">
                <label>City:</label>
                <div class="detail-content">
                  <input type="text" id="city" name="city" required />
                </div>
              </div>
              <div class="detail-row">
                <label>State:</label>
                <div class="detail-content">
                  <input type="text" id="state" name="state" required />
                </div>
              </div>
              <div class="detail-row">
                <label>Pincode:</label>
                <div class="detail-content">
                  <input type="text" id="pincode" name="pincode" required />
                </div>
              </div>
              <div class="detail-row">
                <label>Type:</label>
                <div class="detail-content">
                  <select id="addressType" name="addressType" required>
                    <option value="">Select Type</option>
                    <option value="home">Home</option>
                    <option value="work">Work</option>
                  </select>
                </div>
              </div>
              <button type="submit" class="change-btn">Save Address</button>
            </form>
          </div>
        </div>

        <!-- Right Side Content -->
        <div class="tab__content active-tab">
          <div class="tab__pane">
            <h3 class="tab__header">Contact Details</h3>
            <div class="tab__body">
              <!-- User Details Section -->
              <div class="detail-row">
                <label>Name:</label>
                <div class="detail-content">
                  <input type="text" value="<%= user.name %>" readonly />
                  <button class="change-btn change-name-btn" data-field="name">Change</button>
                </div>
              </div>

                <div class="detail-row">
                  <label>Email:</label>
                  <div class="detail-content">
                    <input type="email" value="<%= user.email %>" readonly />
                  </div>
                </div>

                <div class="detail-row">
                  <label>Password:</label>
                  <div class="detail-content">
                    <input type="password" value="<%= user.email %>" readonly />
                    <button class="change-btn change-password-btn">Change</button>
                  </div>
                </div>

              <!-- Address Section -->
              <div class="address-section">
                <h3>Addresses</h3>
                <button class="add-address-btn">Add New</button>

                <div class="addresses-container">
                  <% if (addresses && addresses.length > 0) { %> <%
                  addresses.forEach(address => { %>
                  <div class="address-card">
                    <p class="name"><%= address.fullName %></p>
                    <p class="phone"><%= address.phone %></p>
                    <p class="address">
                      <%= address.address %>, <%= address.city %>, <%=
                      address.state %> - <%= address.pincode %>
                    </p>
                    <div class="address-actions">
                      <button
                        class="edit-btn"
                        data-address-id="<%= address._id %>"
                      >
                        Edit
                      </button>
                      <button
                        class="delete-btn"
                        data-address-id="<%= address._id %>"
                      >
                        Delete
                      </button>
                    </div>
                  </div>
                  <% }) %> <% } else { %>
                  <p>No addresses found</p>
                  <% } %>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>
</body>
<%- include("../../views/user/partials/footer") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  // Modal functionality for name
  const editNameModal = document.getElementById("editNameModal");
  const editNameForm = document.getElementById("editNameForm");
  const editNameField = document.getElementById("editNameField");

  document.querySelectorAll(".change-name-btn").forEach((btn) => {
    btn.addEventListener("click", function () {
      editNameModal.style.display = "block";
    });
  });

// Modal functionality for password
const editPasswordModal = document.getElementById("editPasswordModal");
const editPasswordForm = document.getElementById("editPasswordForm");
const editPasswordField = document.getElementById("editPasswordField");
const confirmEditPasswordField = document.getElementById("confirmEditPasswordField");

document.querySelectorAll(".change-password-btn").forEach((btn) => {
  btn.addEventListener("click", function () {
    editPasswordModal.style.display = "block";
  });
});

// Close modal functionality
document.querySelectorAll(".close-modal").forEach((btn) => {
  btn.addEventListener("click", function () {
    editPasswordModal.style.display = "none";
  });
});

window.addEventListener("click", (e) => {
  if (e.target === editPasswordModal) {
    editPasswordModal.style.display = "none";
  }
});


 // Form submission handlers
 editNameForm.addEventListener("submit", async function (e) {
    e.preventDefault();
    const name = editNameField.value;

    try {
      const response = await fetch("/update-profile", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ name }),
      });

      const result = await response.json();

      if (result.success) {
        document.querySelector('input[value="<%= user.name %>"]').value = name;
        editNameModal.style.display = "none";
      } else {
        alert(result.message || "Update failed");
      }
    } catch (error) {
      console.error("Error updating profile:", error);
      alert("An error occurred while updating");
    }
  });

 // Form submission handler for password change
 editPasswordForm.addEventListener("submit", async function (e) {
    e.preventDefault();
    const newPass1 = editPasswordField.value;
    const newPass2 = confirmEditPasswordField.value;

    if (newPass1 !== newPass2) {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Passwords do not match',
      });
      return;
    }

    try {
      const response = await fetch("/reset-password", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ newPass1, newPass2 }),
      });

      const result = await response.json();

      if (result.success) {
        editPasswordModal.style.display = "none";
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: 'Password updated successfully',
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Update Failed',
          text: result.message || "Update failed",
        });
      }
    } catch (error) {
      console.error("Error updating profile:", error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'An error occurred while updating',
      });
    }
  });

  
  // Add Address Modal Functionality
  const addAddressModal = document.getElementById("addAddressModal");
  const addAddressBtn = document.querySelector(".add-address-btn");
  const addAddressCloseBtn = addAddressModal.querySelector(".close-modal");
  const addAddressForm = document.getElementById("addAddressForm");

  // Show modal when add address button is clicked
  addAddressBtn.addEventListener("click", () => {
    addAddressModal.style.display = "block";
  });

  // Close modal when close button is clicked
  addAddressCloseBtn.addEventListener("click", () => {
    addAddressModal.style.display = "none";
    addAddressForm.reset();
  });

  // Close modal when clicking outside
  window.addEventListener("click", (e) => {
    if (e.target === addAddressModal) {
      addAddressModal.style.display = "none";
      addAddressForm.reset();
    }
  });

  addAddressForm.addEventListener("submit", async (e) => {
    e.preventDefault();

    // Get form data and create address object
    const formData = new FormData(addAddressForm);
    const addressData = {
      fullName: formData.get("fullName"),
      phone: formData.get("phone"),
      altPhone: formData.get("altPhone") || formData.get("phone"),
      address: formData.get("address"),
      landmark: formData.get("landmark"),
      city: formData.get("city"),
      state: formData.get("state"),
      pincode: formData.get("pincode"),
      addressType: formData.get("addressType"),
    };

    try {
      const response = await fetch("/add-address", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(addressData),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || "Failed to add address");
      }

      const result = await response.json();

      if (result.success) {
        // Close the modal
        addAddressModal.style.display = "none";
        addAddressForm.reset();

        // Show success message
        await Swal.fire({
          icon: "success",
          title: "Success!",
          text: "New address added successfully",
          confirmButtonColor: "#3085d6",
        });

        // Reload the page after showing the message
        window.location.reload();
      }
    } catch (error) {
      console.error("Error saving address:", error);
      Swal.fire({
        icon: "error",
        title: "Oops...",
        text: error.message || "An error occurred while saving the address",
      });
    }
  });

  function createAddressCard(address) {
    const div = document.createElement("div");
    div.className = "address-card";
    div.innerHTML = `
    <p class="name">${address.fullName}</p>
    <p class="phone">${address.phone}</p>
    <p class="address">
      ${address.landmark}, ${address.city}, ${address.state} - ${address.pincode}
    </p>
    <div class="address-actions">
      <button class="edit-btn" data-address-id="${address._id}">Edit</button>
      <button class="delete-btn" data-address-id="${address._id}">Delete</button>
    </div>
  `;
    return div;
  }
</script>
